import ballerina/grpc;

listener grpc:Listener ep = new (9090);

service HealthServer on ep {

    resource function registerPatient(grpc:Caller caller, Patient value) {
        // Implementation goes here.

        // You should return a boolean
    }
    resource function getPatientInfo(grpc:Caller caller, string value) {
        // Implementation goes here.

        // You should return a Patient
    }
}

public type Patient record {|
    string id = "";
    string name = "";
    Gender? gender = ();
    string disease = "";
    
|};

public type Gender "MALE"|"FEMALE"|"OTHER";
public const Gender GENDER_MALE = "MALE";
const Gender GENDER_FEMALE = "FEMALE";
const Gender GENDER_OTHER = "OTHER";



const string
function getDescriptorMap() returns map<string> {
    return {
        "health-stub.proto
        "google/protobuf/wrappers.proto
        
    };
}

